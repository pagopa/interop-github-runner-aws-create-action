name: "Create GitHub self hosted runner"
description: "Create a GitHub self hosted runner on AWS"

inputs:
  aws_region:
    description: "AWS region code"
    required: true
  iam_role_arn:
    description: "ARN of the IAM role to assume"
    required: true
  ecs_cluster_name:
    description: "ECS cluster"
    required: true
  ecs_task_definition:
    description: "ECS task definition family[:revision] or full ARN"
    required: true
  ecs_task_cpu:
    description: "ECS task cpu"
    required: false
  ecs_task_memory:
    description: "ECS task memory"
    required: false
  ecs_task_max_duration_seconds:
    description: "ECS task max execution time in seconds"
    required: false
  ecs_container_name:
    description: "Name of the gh runner container in the ECS task definition"
    required: true
  ecs_task_subnet_id:
    description: "ID of the subnet where the task will run"
    required: true
  ecs_task_sec_group:
    description: "ID of security group to attach to the task"
    required: true
  pat_token:
    description: "GitHub PAT token to access APIs to manage self hosted runner"
    required: true
  environment:
    description: "Target environment on which the Github Runner will execute tasks"
    required: false

outputs:
  runner_name:
    value: ${{ steps.create_github_runner.outputs.runner_name }}
    description: 'Name of the self-hosted runner'
  ecs_task_id:
    value: ${{ steps.create_github_runner.outputs.ecs_task_id }}
    description: 'Id of the ECS task that has been started'

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.iam_role_arn }}

    - name: Create GitHub Runner
      id: create_github_runner
      shell: bash
      env:
        ECS_CLUSTER_NAME: ${{ inputs.ecs_cluster_name }}
        ECS_CONTAINER_NAME: ${{ inputs.ecs_container_name }}
        ECS_TASK_CPU: ${{ inputs.ecs_task_cpu }}
        ECS_TASK_DEFINITION: ${{ inputs.ecs_task_definition }}
        ECS_TASK_MAX_DURATION_SECONDS: ${{ inputs.ecs_task_max_duration_seconds }}
        ECS_TASK_MEMORY: ${{ inputs.ecs_task_memory }}
        ECS_TASK_SEC_GROUP: ${{ inputs.ecs_task_sec_group }}
        ECS_TASK_SUBNET_ID: ${{ inputs.ecs_task_subnet_id }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
        MATRIX_INDEX: ${{ matrix.index }}
        PAT_TOKEN: ${{ inputs.pat_token }}
        TARGET_ENV: ${{ inputs.environment }}
      run: |
        ${{ github.action_path }}/scripts/createGithubRunner.sh

    - name: Create ecs_task_id artifact
      if: always()
      env:
        INDEX: ${{ matrix.index }}
        ECS_TASK_ID: ${{ steps.create_github_runner.outputs.ecs_task_id }}
      shell: bash
      run: |
        set -euo pipefail

        touch ${INDEX}_${ECS_TASK_ID}
    - name: Upload ecs_task_id artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.index}}_ecs_task_id
        path: "${{ matrix.index}}_${{ steps.create_github_runner.outputs.ecs_task_id }}"
        retention-days: 1
