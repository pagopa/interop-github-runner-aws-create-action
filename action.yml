name: "Create GitHub self hosted runner"
description: "Create a GitHub self hosted runner on Azure"

inputs:
  aws_region:
    description: "AWS region code"
    required: true
  iam_role_arn:
    description: "ARN of the IAM role to assume"
    required: true
  ecs_cluster_name:
    description: "ECS cluster"
    required: true
  ecs_task_definition_arn:
    description: "ECS task definition ARN"
    required: true
  ecs_container_name:
    description: "Name of the gh runner container in the ECS task definition"
    required: true
  ecs_task_subnet_id:
    description: "ID of the subnet where the task will run"
    required: true
  ecs_task_sec_group:
    description: "ID of security group to attach to the task"
    required: true
  pat_token:
    description: "GitHub PAT token to access APIs to manage self hosted runner"
    required: true

outputs:
  runner_name:
    value: ${{ steps.create_github_runner.outputs.ECS_TASK_ID }}
    description: 'Name of the self-hosted runner'

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.iam_role_arn }}

    - name: Create GitHub Runner
      id: create_github_runner
      shell: bash
      run: |
        TIMESTAMP=$(date +%s)

        REGISTRATION_TOKEN=$(curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.pat_token }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runners/registration-token | jq ".token" -r)

        echo "{\"awsvpcConfiguration\":{\"assignPublicIp\":\"DISABLED\",
            \"securityGroups\":[\"${{ inputs.ecs_task_sec_group }}\"],
            \"subnets\":[\"${{ inputs.ecs_task_subnet_id }}\"]}}" > network_config.json

        echo "{\"containerOverrides\":[{\"name\":\"${{ inputs.ecs_container_name }}\",\"environment\":[
              {\"name\":\"GITHUB_REPOSITORY\",\"value\":\"https://github.com/${{ github.repository }}\"},
              {\"name\":\"GITHUB_TOKEN\",\"value\":\"${REGISTRATION_TOKEN}\"}]}]}" > overrides.json

        ECS_TASK_ID=$(aws ecs run-task \
          --launch-type "FARGATE" \
          --cluster "${{ inputs.ecs_cluster_name }}" \
          --network-configuration file://./network_config.json \
          --task-definition "${{ inputs.ecs_task_definition_arn }}" \
          --overrides file://./overrides.json \
          | jq -r '.tasks[0].taskArn' \
          | cut -d "/" -f 3)

        sleep 30

        START_TIME=$(date +%s)
        while [ $(( $(date +%s) - 300 )) -lt $START_TIME ]; do

          GITHUB_RUNNER_ID=$(curl \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ inputs.pat_token }}" \
              https://api.github.com/repos/${{ github.repository }}/actions/runners \
              | jq -r '.runners | map(select(.name == "'$ECS_TASK_ID'")) | .[].id')

          if [ -n "$GITHUB_RUNNER_ID" ]; then
            echo "[INFO] Self-hosted runner ${ECS_TASK_ID} has been added to this repo"
            echo "runner_name=${ECS_TASK_ID}" >> $GITHUB_OUTPUT
            break
          fi

          sleep 10

        done

        if [ -z "$GITHUB_RUNNER_ID" ]; then
          echo "[ERROR] $GITHUB_RUNNER_ID is empty" >&2
          exit 1
        fi

        curl \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.pat_token }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runners/${GITHUB_RUNNER_ID}/labels \
          -d '{"labels":["'${ECS_TASK_ID}'"]}'
